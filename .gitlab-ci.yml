image: alpine:latest

.auto-deploy:
  image: "git.ia.surfsara.nl:5050/automation/projects/build-container/master"

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  ROLLOUT_RESOURCE_TYPE: "deployment"

stages:
  - build
  - test
  - review
  - development
  - staging
  - production
  - cleanup

include:
  - template: Jobs/Build.gitlab-ci.yml

unit test:
  image: node:12.13.1
  stage: test
  variables:
    TZ: Europe/Amsterdam
  script:
    - yarn install --frozen-lockfile
    - yarn prettier -c '{**/*.{js,jsx,scss,md},public/**/*.html}'
    - yarn test --coverage

.deploy_script: &deploy_script
  script:
    - auto-deploy ensure_namespace
    - auto-deploy initialize_helm
    - auto-deploy prepare_chart
    - auto-deploy create_secret
    - auto-deploy deploy
    - auto-deploy publish_chart
    - auto-deploy persist_environment_url

deploy review:
  variables:
    KUBE_INGRESS_BASE_DOMAIN: review.automation.surf.net
  extends: .auto-deploy
  stage: review
  <<: *deploy_script
  only:
    refs:
      - branches
    kubernetes: active
  artifacts:
    paths: [environment_url.txt]
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: https://$CI_COMMIT_REF_SLUG-$CI_PROJECT_NAME.$KUBE_INGRESS_BASE_DOMAIN
    on_stop: stop_review
  except:
    refs:
      - dev
      - master
      - tags
      - schedules

deploy review base:
  variables:
    KUBE_INGRESS_BASE_DOMAIN: orchestrator.review.automation.surf.net
  extends: .auto-deploy
  stage: development
  <<: *deploy_script
  only:
    refs:
      - dev
    kubernetes: active
  artifacts:
    paths: [environment_url.txt]
  environment:
    name: review
    url: https://$KUBE_INGRESS_BASE_DOMAIN
  except:
    refs:
      - master
      - tags
      - schedules

run system tests on dev:
  stage: development
  trigger:
    project: automation/automation-testers/system-tests
    branch: dev
  only:
    refs:
      - dev

deploy dev:
  variables:
    KUBE_INGRESS_BASE_DOMAIN: orchestrator.dev.automation.surf.net
    DEPLOY_NAMESPACE: development
  extends: .auto-deploy
  stage: development
  <<: *deploy_script
  only:
    refs:
      - dev
    kubernetes: active
  artifacts:
    paths: [environment_url.txt]
  environment:
    name: development
    url: https://$KUBE_INGRESS_BASE_DOMAIN
  except:
    refs:
      - master
      - tags
      - schedules

run system tests on staging:
  stage: staging
  trigger:
    project: automation/automation-testers/system-tests
    branch: master
  only:
    refs:
      - master

deploy staging:
  variables:
    KUBE_INGRESS_BASE_DOMAIN: orchestrator.staging.automation.surf.net
    DEPLOY_NAMESPACE: staging
  extends: .auto-deploy
  stage: staging
  <<: *deploy_script
  only:
    refs:
      - master
    kubernetes: active
  artifacts:
    paths: [environment_url.txt]
  environment:
    name: staging
    url: https://$KUBE_INGRESS_BASE_DOMAIN
  except:
    refs:
      - dev
      - tags
      - schedules

deploy production:
  variables:
    KUBE_INGRESS_BASE_DOMAIN: orchestrator.automation.surf.net
    DEPLOY_NAMESPACE: production
  extends: .auto-deploy
  stage: production
  <<: *deploy_script
  only:
    refs:
      - tags
    kubernetes: active
  artifacts:
    paths: [environment_url.txt]
  environment:
    name: production
    url: https://$KUBE_INGRESS_BASE_DOMAIN
  except:
    refs:
      - dev
      - master
      - schedules

stop_review:
  extends: .auto-deploy
  stage: cleanup
  variables:
    GIT_STRATEGY: none
  script:
    - auto-deploy initialize_helm
    - auto-deploy delete
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  when: manual
  allow_failure: true
  only:
    refs:
      - branches
    kubernetes: active
  except:
    refs:
      - dev
      - master
      - tags
