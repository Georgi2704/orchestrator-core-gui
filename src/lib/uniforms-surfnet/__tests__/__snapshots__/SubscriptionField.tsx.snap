// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SubscriptionField> <SubscriptionField> - renders a select with correct options (no filter) 1`] = `
"<SubscriptionField name=\\"x\\">
  <Subscription name=\\"x\\" id=\\"uniforms-0000-000a\\" disabled={false} label=\\"\\" placeholder=\\"\\" showInlineError={false} changed={false} error={null} errorMessage=\\"\\" field={{ type: [Function: String], optional: false, label: 'X' }} fieldType={[Function: String]} fields={[]} onChange={[Function]} value={[undefined]} required={true}>
    <section className=\\" subscription-field\\">
      <div>
        <EuiButtonIcon id=\\"refresh-icon-uniforms-0000-000a\\" iconType=\\"refresh\\" iconSize=\\"l\\" onClick={[Function: onClick]}>
          <button tabIndex={[undefined]} disabled={[undefined]} className=\\"euiButtonIcon euiButtonIcon--primary\\" type=\\"button\\" id=\\"refresh-icon-uniforms-0000-000a\\" onClick={[Function: onClick]}>
            <EuiIcon className=\\"euiButtonIcon__icon\\" type=\\"refresh\\" size=\\"l\\" aria-hidden=\\"true\\">
              <EuiIconRefresh className=\\"euiIcon euiIcon--large euiButtonIcon__icon\\" style={null} tabIndex={[undefined]} focusable=\\"false\\" role=\\"img\\" title={[undefined]} aria-hidden={true}>
                <svg width={16} height={16} viewBox=\\"0 0 16 16\\" xmlns=\\"http://www.w3.org/2000/svg\\" aria-labelledby={[undefined]} className=\\"euiIcon euiIcon--large euiButtonIcon__icon\\" style={null} tabIndex={[undefined]} focusable=\\"false\\" role=\\"img\\" aria-hidden={true}>
                  <path d=\\"M11.228 2.942a.5.5 0 11-.538.842A5 5 0 1013 8a.5.5 0 111 0 6 6 0 11-2.772-5.058zM14 1.5v3A1.5 1.5 0 0112.5 6h-3a.5.5 0 010-1h3a.5.5 0 00.5-.5v-3a.5.5 0 111 0z\\" />
                </svg>
              </EuiIconRefresh>
            </EuiIcon>
          </button>
        </EuiButtonIcon>
        <StateManager id=\\"uniforms-0000-000a\\" inputId=\\"uniforms-0000-000a.search\\" name=\\"x\\" onChange={[Function: onChange]} options={[ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ]} value={[undefined]} isSearchable={true} isClearable={false} placeholder=\\"Search and select a subscription...\\" isDisabled={false} required={true} inputRef={[undefined]} className=\\"subscription-field-select\\" defaultInputValue=\\"\\" defaultMenuIsOpen={false} defaultValue={null}>
          <Select id=\\"uniforms-0000-000a\\" inputId=\\"uniforms-0000-000a.search\\" name=\\"x\\" onChange={[Function]} options={[ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ]} value={null} isSearchable={true} isClearable={false} placeholder=\\"Search and select a subscription...\\" isDisabled={false} required={true} inputRef={[undefined]} className=\\"subscription-field-select\\" inputValue=\\"\\" menuIsOpen={false} onInputChange={[Function]} onMenuClose={[Function]} onMenuOpen={[Function]} backspaceRemovesValue={true} blurInputOnSelect={true} captureMenuScroll={false} closeMenuOnSelect={true} closeMenuOnScroll={false} components={{}} controlShouldRenderValue={true} escapeClearsValue={false} filterOption={[Function]} formatGroupLabel={[Function: formatGroupLabel]} getOptionLabel={[Function: getOptionLabel]} getOptionValue={[Function: getOptionValue]} isLoading={false} isMulti={false} isRtl={false} isOptionDisabled={[Function: isOptionDisabled]} loadingMessage={[Function: loadingMessage]} maxMenuHeight={300} minMenuHeight={140} menuPlacement=\\"bottom\\" menuPosition=\\"absolute\\" menuShouldBlockScroll={false} menuShouldScrollIntoView={true} noOptionsMessage={[Function: noOptionsMessage]} openMenuOnFocus={false} openMenuOnClick={true} pageSize={5} screenReaderStatus={[Function: screenReaderStatus]} styles={{}} tabIndex=\\"0\\" tabSelectsValue={true}>
            <SelectContainer cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={false} isMulti={false} isRtl={false} options={[ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-000a', inputId: 'uniforms-0000-000a.search', name: 'x', onChange: [Function], options: [ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: true, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} className=\\"subscription-field-select\\" innerProps={{ id: 'uniforms-0000-000a', onKeyDown: [Function] }} isDisabled={false} isFocused={false}>
              <EmotionCssPropInternal css={{ label: 'container', direction: null, pointerEvents: null, position: 'relative', boxSizing: 'border-box' }} className=\\"subscription-field-select\\" id=\\"uniforms-0000-000a\\" onKeyDown={[Function]} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"SelectContainer\\">
                <div className=\\"subscription-field-select css-2b097c-container\\" id=\\"uniforms-0000-000a\\" onKeyDown={[Function]}>
                  <Control cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={false} isMulti={false} isRtl={false} options={[ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-000a', inputId: 'uniforms-0000-000a.search', name: 'x', onChange: [Function], options: [ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: true, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} innerRef={[Function]} innerProps={{ onMouseDown: [Function], onTouchEnd: [Function] }} isDisabled={false} isFocused={false} menuIsOpen={false}>
                    <EmotionCssPropInternal css={{ label: 'control', alignItems: 'center', backgroundColor: 'hsl(0, 0%, 100%)', borderColor: 'hsl(0, 0%, 80%)', borderRadius: 4, borderStyle: 'solid', borderWidth: 1, boxShadow: null, cursor: 'default', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between', minHeight: 38, outline: '0 !important', position: 'relative', transition: 'all 100ms', '&:hover': { borderColor: 'hsl(0, 0%, 70%)' }, boxSizing: 'border-box' }} className=\\"\\" onMouseDown={[Function]} onTouchEnd={[Function]} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Control\\">
                      <div className=\\" css-yk16xz-control\\" onMouseDown={[Function]} onTouchEnd={[Function]}>
                        <ValueContainer cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={false} isMulti={false} isRtl={false} options={[ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-000a', inputId: 'uniforms-0000-000a.search', name: 'x', onChange: [Function], options: [ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: true, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} isDisabled={false}>
                          <EmotionCssPropInternal css={{ alignItems: 'center', display: 'flex', flex: 1, flexWrap: 'wrap', padding: '2px 8px', WebkitOverflowScrolling: 'touch', position: 'relative', overflow: 'hidden', boxSizing: 'border-box' }} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"ValueContainer\\">
                            <div className=\\" css-g1d714-ValueContainer\\">
                              <Placeholder cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={false} isMulti={false} isRtl={false} options={[ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-000a', inputId: 'uniforms-0000-000a.search', name: 'x', onChange: [Function], options: [ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: true, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} isDisabled={false} isFocused={false}>
                                <EmotionCssPropInternal css={{ label: 'placeholder', color: 'hsl(0, 0%, 50%)', marginLeft: 2, marginRight: 2, position: 'absolute', top: '50%', transform: 'translateY(-50%)', boxSizing: 'border-box' }} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Placeholder\\">
                                  <div className=\\" css-1wa3eu0-placeholder\\">
                                    Search and select a subscription...
                                  </div>
                                </EmotionCssPropInternal>
                              </Placeholder>
                              <Input autoCapitalize=\\"none\\" autoComplete=\\"off\\" autoCorrect=\\"off\\" cx={[Function: bound classNames]} getStyles={[Function]} id=\\"uniforms-0000-000a.search\\" innerRef={[Function]} isDisabled={false} isHidden={false} onBlur={[Function]} onChange={[Function]} onFocus={[Function]} selectProps={{ id: 'uniforms-0000-000a', inputId: 'uniforms-0000-000a.search', name: 'x', onChange: [Function], options: [ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: true, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} spellCheck=\\"false\\" tabIndex=\\"0\\" theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} type=\\"text\\" value=\\"\\" aria-autocomplete=\\"list\\" aria-label={[undefined]} aria-labelledby={[undefined]}>
                                <EmotionCssPropInternal css={{ margin: 2, paddingBottom: 2, paddingTop: 2, visibility: 'visible', color: 'hsl(0, 0%, 20%)', boxSizing: 'border-box' }} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Input\\">
                                  <div className=\\"css-b8ldur-Input\\">
                                    <AutosizeInput className=\\"\\" inputRef={[Function]} inputStyle={{ label: 'input', background: 0, border: 0, fontSize: 'inherit', opacity: 1, outline: 0, padding: 0, color: 'inherit' }} disabled={false} autoCapitalize=\\"none\\" autoComplete=\\"off\\" autoCorrect=\\"off\\" id=\\"uniforms-0000-000a.search\\" onBlur={[Function]} onChange={[Function]} onFocus={[Function]} spellCheck=\\"false\\" tabIndex=\\"0\\" type=\\"text\\" value=\\"\\" aria-autocomplete=\\"list\\" aria-label={[undefined]} aria-labelledby={[undefined]} minWidth={1} injectStyles={true}>
                                      <div className=\\"\\" style={{ display: 'inline-block' }}>
                                        <input className={[undefined]} disabled={false} autoCapitalize=\\"none\\" autoComplete=\\"off\\" autoCorrect=\\"off\\" id=\\"uniforms-0000-000a.search\\" onBlur={[Function]} onChange={[Function]} onFocus={[Function]} spellCheck=\\"false\\" tabIndex=\\"0\\" type=\\"text\\" value=\\"\\" aria-autocomplete=\\"list\\" aria-label={[undefined]} aria-labelledby={[undefined]} style={{ boxSizing: 'content-box', width: '2px', label: 'input', background: 0, border: 0, fontSize: 'inherit', opacity: 1, outline: 0, padding: 0, color: 'inherit' }} />
                                        <div style={{ position: 'absolute', top: 0, left: 0, visibility: 'hidden', height: 0, overflow: 'scroll', whiteSpace: 'pre' }} />
                                      </div>
                                    </AutosizeInput>
                                  </div>
                                </EmotionCssPropInternal>
                              </Input>
                            </div>
                          </EmotionCssPropInternal>
                        </ValueContainer>
                        <IndicatorsContainer cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={false} isMulti={false} isRtl={false} options={[ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-000a', inputId: 'uniforms-0000-000a.search', name: 'x', onChange: [Function], options: [ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: true, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} isDisabled={false}>
                          <EmotionCssPropInternal css={{ alignItems: 'center', alignSelf: 'stretch', display: 'flex', flexShrink: 0, boxSizing: 'border-box' }} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"IndicatorsContainer\\">
                            <div className=\\" css-1hb7zxy-IndicatorsContainer\\">
                              <IndicatorSeparator cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={false} isMulti={false} isRtl={false} options={[ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-000a', inputId: 'uniforms-0000-000a.search', name: 'x', onChange: [Function], options: [ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: true, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} isDisabled={false} isFocused={false}>
                                <EmotionCssPropInternal css={{ label: 'indicatorSeparator', alignSelf: 'stretch', backgroundColor: 'hsl(0, 0%, 80%)', marginBottom: 8, marginTop: 8, width: 1, boxSizing: 'border-box' }} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"span\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"IndicatorSeparator\\">
                                  <span className=\\" css-1okebmr-indicatorSeparator\\" />
                                </EmotionCssPropInternal>
                              </IndicatorSeparator>
                              <DropdownIndicator cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={false} isMulti={false} isRtl={false} options={[ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-000a', inputId: 'uniforms-0000-000a.search', name: 'x', onChange: [Function], options: [ { label: 'd1', value: 'a' }, { label: 'd2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: true, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} innerProps={{ onMouseDown: [Function], onTouchEnd: [Function], 'aria-hidden': 'true' }} isDisabled={false} isFocused={false}>
                                <EmotionCssPropInternal onMouseDown={[Function]} onTouchEnd={[Function]} aria-hidden=\\"true\\" css={{ label: 'indicatorContainer', color: 'hsl(0, 0%, 80%)', display: 'flex', padding: 8, transition: 'color 150ms', ':hover': { color: 'hsl(0, 0%, 60%)' }, boxSizing: 'border-box' }} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"DropdownIndicator\\">
                                  <div onMouseDown={[Function]} onTouchEnd={[Function]} aria-hidden=\\"true\\" className=\\" css-tlfecz-indicatorContainer\\">
                                    <DownChevron>
                                      <Svg size={20}>
                                        <EmotionCssPropInternal height={20} width={20} viewBox=\\"0 0 20 20\\" aria-hidden=\\"true\\" focusable=\\"false\\" css={{ name: '19bqh2r', styles: 'display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;', map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */' }} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"svg\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Svg\\">
                                          <svg height={20} width={20} viewBox=\\"0 0 20 20\\" aria-hidden=\\"true\\" focusable=\\"false\\" className=\\"css-6q0nyr-Svg\\">
                                            <path d=\\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\\" />
                                          </svg>
                                        </EmotionCssPropInternal>
                                      </Svg>
                                    </DownChevron>
                                  </div>
                                </EmotionCssPropInternal>
                              </DropdownIndicator>
                            </div>
                          </EmotionCssPropInternal>
                        </IndicatorsContainer>
                      </div>
                    </EmotionCssPropInternal>
                  </Control>
                  <input name=\\"x\\" type=\\"hidden\\" value=\\"\\" />
                </div>
              </EmotionCssPropInternal>
            </SelectContainer>
          </Select>
        </StateManager>
      </div>
    </section>
  </Subscription>
</SubscriptionField>"
`;

exports[`<SubscriptionField> <SubscriptionField> - renders a select with correct value (as uniqueItem list child) 1`] = `
"<ListField name=\\"x\\">
  <List name=\\"x\\" id=\\"uniforms-0000-001i\\" disabled={false} label=\\"\\" placeholder=\\"\\" showInlineError={false} changed={false} error={null} errorMessage=\\"\\" field={{ uniforms: { uniqueItems: true }, type: [Function: Array], optional: false, label: 'X' }} fieldType={[Function: Array]} fields={[]} onChange={[Function]} value={[ 'a', undefined ]} required={true} uniqueItems={true}>
    <section id=\\"uniforms-0000-001i\\" required={true} className=\\" list-field\\">
      <ul>
        <SubscriptionField name=\\"0\\" outerList={false}>
          <Subscription name=\\"x.0\\" outerList={false} id=\\"uniforms-0000-001k\\" disabled={false} label=\\"\\" placeholder=\\"\\" showInlineError={false} changed={false} error={null} errorMessage=\\"\\" field={{ type: [Function: String], optional: true, label: 'X' }} fieldType={[Function: String]} fields={[]} onChange={[Function]} value=\\"a\\" required={false}>
            <section className=\\" subscription-field\\">
              <div>
                <EuiButtonIcon id=\\"refresh-icon-uniforms-0000-001k\\" iconType=\\"refresh\\" iconSize=\\"l\\" onClick={[Function: onClick]}>
                  <button tabIndex={[undefined]} disabled={[undefined]} className=\\"euiButtonIcon euiButtonIcon--primary\\" type=\\"button\\" id=\\"refresh-icon-uniforms-0000-001k\\" onClick={[Function: onClick]}>
                    <EuiIcon className=\\"euiButtonIcon__icon\\" type=\\"refresh\\" size=\\"l\\" aria-hidden=\\"true\\">
                      <EuiIconRefresh className=\\"euiIcon euiIcon--large euiButtonIcon__icon\\" style={null} tabIndex={[undefined]} focusable=\\"false\\" role=\\"img\\" title={[undefined]} aria-hidden={true}>
                        <svg width={16} height={16} viewBox=\\"0 0 16 16\\" xmlns=\\"http://www.w3.org/2000/svg\\" aria-labelledby={[undefined]} className=\\"euiIcon euiIcon--large euiButtonIcon__icon\\" style={null} tabIndex={[undefined]} focusable=\\"false\\" role=\\"img\\" aria-hidden={true}>
                          <path d=\\"M11.228 2.942a.5.5 0 11-.538.842A5 5 0 1013 8a.5.5 0 111 0 6 6 0 11-2.772-5.058zM14 1.5v3A1.5 1.5 0 0112.5 6h-3a.5.5 0 010-1h3a.5.5 0 00.5-.5v-3a.5.5 0 111 0z\\" />
                        </svg>
                      </EuiIconRefresh>
                    </EuiIcon>
                  </button>
                </EuiButtonIcon>
                <StateManager id=\\"uniforms-0000-001k\\" inputId=\\"uniforms-0000-001k.search\\" name=\\"x.0\\" onChange={[Function: onChange]} options={[ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ]} value={{ label: 'dec1', value: 'a' }} isSearchable={true} isClearable={false} placeholder=\\"Search and select a subscription...\\" isDisabled={false} required={false} inputRef={[undefined]} className=\\"subscription-field-select\\" defaultInputValue=\\"\\" defaultMenuIsOpen={false} defaultValue={null}>
                  <Select id=\\"uniforms-0000-001k\\" inputId=\\"uniforms-0000-001k.search\\" name=\\"x.0\\" onChange={[Function]} options={[ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ]} value={{ label: 'dec1', value: 'a' }} isSearchable={true} isClearable={false} placeholder=\\"Search and select a subscription...\\" isDisabled={false} required={false} inputRef={[undefined]} className=\\"subscription-field-select\\" inputValue=\\"\\" menuIsOpen={false} onInputChange={[Function]} onMenuClose={[Function]} onMenuOpen={[Function]} backspaceRemovesValue={true} blurInputOnSelect={true} captureMenuScroll={false} closeMenuOnSelect={true} closeMenuOnScroll={false} components={{}} controlShouldRenderValue={true} escapeClearsValue={false} filterOption={[Function]} formatGroupLabel={[Function: formatGroupLabel]} getOptionLabel={[Function: getOptionLabel]} getOptionValue={[Function: getOptionValue]} isLoading={false} isMulti={false} isRtl={false} isOptionDisabled={[Function: isOptionDisabled]} loadingMessage={[Function: loadingMessage]} maxMenuHeight={300} minMenuHeight={140} menuPlacement=\\"bottom\\" menuPosition=\\"absolute\\" menuShouldBlockScroll={false} menuShouldScrollIntoView={true} noOptionsMessage={[Function: noOptionsMessage]} openMenuOnFocus={false} openMenuOnClick={true} pageSize={5} screenReaderStatus={[Function: screenReaderStatus]} styles={{}} tabIndex=\\"0\\" tabSelectsValue={true}>
                    <SelectContainer cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={true} isMulti={false} isRtl={false} options={[ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-001k', inputId: 'uniforms-0000-001k.search', name: 'x.0', onChange: [Function], options: [ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ], value: { label: 'dec1', value: 'a' }, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} className=\\"subscription-field-select\\" innerProps={{ id: 'uniforms-0000-001k', onKeyDown: [Function] }} isDisabled={false} isFocused={false}>
                      <EmotionCssPropInternal css={{ label: 'container', direction: null, pointerEvents: null, position: 'relative', boxSizing: 'border-box' }} className=\\"subscription-field-select\\" id=\\"uniforms-0000-001k\\" onKeyDown={[Function]} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"SelectContainer\\">
                        <div className=\\"subscription-field-select css-2b097c-container\\" id=\\"uniforms-0000-001k\\" onKeyDown={[Function]}>
                          <Control cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={true} isMulti={false} isRtl={false} options={[ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-001k', inputId: 'uniforms-0000-001k.search', name: 'x.0', onChange: [Function], options: [ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ], value: { label: 'dec1', value: 'a' }, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} innerRef={[Function]} innerProps={{ onMouseDown: [Function], onTouchEnd: [Function] }} isDisabled={false} isFocused={false} menuIsOpen={false}>
                            <EmotionCssPropInternal css={{ label: 'control', alignItems: 'center', backgroundColor: 'hsl(0, 0%, 100%)', borderColor: 'hsl(0, 0%, 80%)', borderRadius: 4, borderStyle: 'solid', borderWidth: 1, boxShadow: null, cursor: 'default', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between', minHeight: 38, outline: '0 !important', position: 'relative', transition: 'all 100ms', '&:hover': { borderColor: 'hsl(0, 0%, 70%)' }, boxSizing: 'border-box' }} className=\\"\\" onMouseDown={[Function]} onTouchEnd={[Function]} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Control\\">
                              <div className=\\" css-yk16xz-control\\" onMouseDown={[Function]} onTouchEnd={[Function]}>
                                <ValueContainer cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={true} isMulti={false} isRtl={false} options={[ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-001k', inputId: 'uniforms-0000-001k.search', name: 'x.0', onChange: [Function], options: [ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ], value: { label: 'dec1', value: 'a' }, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} isDisabled={false}>
                                  <EmotionCssPropInternal css={{ alignItems: 'center', display: 'flex', flex: 1, flexWrap: 'wrap', padding: '2px 8px', WebkitOverflowScrolling: 'touch', position: 'relative', overflow: 'hidden', boxSizing: 'border-box' }} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"ValueContainer\\">
                                    <div className=\\" css-g1d714-ValueContainer\\">
                                      <SingleValue cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={true} isMulti={false} isRtl={false} options={[ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-001k', inputId: 'uniforms-0000-001k.search', name: 'x.0', onChange: [Function], options: [ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ], value: { label: 'dec1', value: 'a' }, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} data={{ label: 'dec1', value: 'a' }} isDisabled={false}>
                                        <EmotionCssPropInternal css={{ label: 'singleValue', color: 'hsl(0, 0%, 20%)', marginLeft: 2, marginRight: 2, maxWidth: 'calc(100% - 8px)', overflow: 'hidden', position: 'absolute', textOverflow: 'ellipsis', whiteSpace: 'nowrap', top: '50%', transform: 'translateY(-50%)', boxSizing: 'border-box' }} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"SingleValue\\">
                                          <div className=\\" css-1uccc91-singleValue\\">
                                            dec1
                                          </div>
                                        </EmotionCssPropInternal>
                                      </SingleValue>
                                      <Input autoCapitalize=\\"none\\" autoComplete=\\"off\\" autoCorrect=\\"off\\" cx={[Function: bound classNames]} getStyles={[Function]} id=\\"uniforms-0000-001k.search\\" innerRef={[Function]} isDisabled={false} isHidden={false} onBlur={[Function]} onChange={[Function]} onFocus={[Function]} selectProps={{ id: 'uniforms-0000-001k', inputId: 'uniforms-0000-001k.search', name: 'x.0', onChange: [Function], options: [ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ], value: { label: 'dec1', value: 'a' }, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} spellCheck=\\"false\\" tabIndex=\\"0\\" theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} type=\\"text\\" value=\\"\\" aria-autocomplete=\\"list\\" aria-label={[undefined]} aria-labelledby={[undefined]}>
                                        <EmotionCssPropInternal css={{ margin: 2, paddingBottom: 2, paddingTop: 2, visibility: 'visible', color: 'hsl(0, 0%, 20%)', boxSizing: 'border-box' }} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Input\\">
                                          <div className=\\"css-b8ldur-Input\\">
                                            <AutosizeInput className=\\"\\" inputRef={[Function]} inputStyle={{ label: 'input', background: 0, border: 0, fontSize: 'inherit', opacity: 1, outline: 0, padding: 0, color: 'inherit' }} disabled={false} autoCapitalize=\\"none\\" autoComplete=\\"off\\" autoCorrect=\\"off\\" id=\\"uniforms-0000-001k.search\\" onBlur={[Function]} onChange={[Function]} onFocus={[Function]} spellCheck=\\"false\\" tabIndex=\\"0\\" type=\\"text\\" value=\\"\\" aria-autocomplete=\\"list\\" aria-label={[undefined]} aria-labelledby={[undefined]} minWidth={1} injectStyles={true}>
                                              <div className=\\"\\" style={{ display: 'inline-block' }}>
                                                <input className={[undefined]} disabled={false} autoCapitalize=\\"none\\" autoComplete=\\"off\\" autoCorrect=\\"off\\" id=\\"uniforms-0000-001k.search\\" onBlur={[Function]} onChange={[Function]} onFocus={[Function]} spellCheck=\\"false\\" tabIndex=\\"0\\" type=\\"text\\" value=\\"\\" aria-autocomplete=\\"list\\" aria-label={[undefined]} aria-labelledby={[undefined]} style={{ boxSizing: 'content-box', width: '2px', label: 'input', background: 0, border: 0, fontSize: 'inherit', opacity: 1, outline: 0, padding: 0, color: 'inherit' }} />
                                                <div style={{ position: 'absolute', top: 0, left: 0, visibility: 'hidden', height: 0, overflow: 'scroll', whiteSpace: 'pre' }} />
                                              </div>
                                            </AutosizeInput>
                                          </div>
                                        </EmotionCssPropInternal>
                                      </Input>
                                    </div>
                                  </EmotionCssPropInternal>
                                </ValueContainer>
                                <IndicatorsContainer cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={true} isMulti={false} isRtl={false} options={[ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-001k', inputId: 'uniforms-0000-001k.search', name: 'x.0', onChange: [Function], options: [ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ], value: { label: 'dec1', value: 'a' }, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} isDisabled={false}>
                                  <EmotionCssPropInternal css={{ alignItems: 'center', alignSelf: 'stretch', display: 'flex', flexShrink: 0, boxSizing: 'border-box' }} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"IndicatorsContainer\\">
                                    <div className=\\" css-1hb7zxy-IndicatorsContainer\\">
                                      <IndicatorSeparator cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={true} isMulti={false} isRtl={false} options={[ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-001k', inputId: 'uniforms-0000-001k.search', name: 'x.0', onChange: [Function], options: [ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ], value: { label: 'dec1', value: 'a' }, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} isDisabled={false} isFocused={false}>
                                        <EmotionCssPropInternal css={{ label: 'indicatorSeparator', alignSelf: 'stretch', backgroundColor: 'hsl(0, 0%, 80%)', marginBottom: 8, marginTop: 8, width: 1, boxSizing: 'border-box' }} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"span\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"IndicatorSeparator\\">
                                          <span className=\\" css-1okebmr-indicatorSeparator\\" />
                                        </EmotionCssPropInternal>
                                      </IndicatorSeparator>
                                      <DropdownIndicator cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={true} isMulti={false} isRtl={false} options={[ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-001k', inputId: 'uniforms-0000-001k.search', name: 'x.0', onChange: [Function], options: [ { label: 'dec1', value: 'a' }, { label: 'dec2', value: 'b' } ], value: { label: 'dec1', value: 'a' }, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} innerProps={{ onMouseDown: [Function], onTouchEnd: [Function], 'aria-hidden': 'true' }} isDisabled={false} isFocused={false}>
                                        <EmotionCssPropInternal onMouseDown={[Function]} onTouchEnd={[Function]} aria-hidden=\\"true\\" css={{ label: 'indicatorContainer', color: 'hsl(0, 0%, 80%)', display: 'flex', padding: 8, transition: 'color 150ms', ':hover': { color: 'hsl(0, 0%, 60%)' }, boxSizing: 'border-box' }} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"DropdownIndicator\\">
                                          <div onMouseDown={[Function]} onTouchEnd={[Function]} aria-hidden=\\"true\\" className=\\" css-tlfecz-indicatorContainer\\">
                                            <DownChevron>
                                              <Svg size={20}>
                                                <EmotionCssPropInternal height={20} width={20} viewBox=\\"0 0 20 20\\" aria-hidden=\\"true\\" focusable=\\"false\\" css={{ name: '19bqh2r', styles: 'display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;', map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */' }} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"svg\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Svg\\">
                                                  <svg height={20} width={20} viewBox=\\"0 0 20 20\\" aria-hidden=\\"true\\" focusable=\\"false\\" className=\\"css-6q0nyr-Svg\\">
                                                    <path d=\\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\\" />
                                                  </svg>
                                                </EmotionCssPropInternal>
                                              </Svg>
                                            </DownChevron>
                                          </div>
                                        </EmotionCssPropInternal>
                                      </DropdownIndicator>
                                    </div>
                                  </EmotionCssPropInternal>
                                </IndicatorsContainer>
                              </div>
                            </EmotionCssPropInternal>
                          </Control>
                          <input name=\\"x.0\\" type=\\"hidden\\" value=\\"a\\" />
                        </div>
                      </EmotionCssPropInternal>
                    </SelectContainer>
                  </Select>
                </StateManager>
              </div>
            </section>
          </Subscription>
        </SubscriptionField>
        <SubscriptionField name=\\"1\\" outerList={false}>
          <Subscription name=\\"x.1\\" outerList={false} id=\\"uniforms-0000-001m\\" disabled={false} label=\\"\\" placeholder=\\"\\" showInlineError={false} changed={false} error={null} errorMessage=\\"\\" field={{ type: [Function: String], optional: true, label: 'X' }} fieldType={[Function: String]} fields={[]} onChange={[Function]} value={[undefined]} required={false}>
            <section className=\\" subscription-field\\">
              <div>
                <EuiButtonIcon id=\\"refresh-icon-uniforms-0000-001m\\" iconType=\\"refresh\\" iconSize=\\"l\\" onClick={[Function: onClick]}>
                  <button tabIndex={[undefined]} disabled={[undefined]} className=\\"euiButtonIcon euiButtonIcon--primary\\" type=\\"button\\" id=\\"refresh-icon-uniforms-0000-001m\\" onClick={[Function: onClick]}>
                    <EuiIcon className=\\"euiButtonIcon__icon\\" type=\\"refresh\\" size=\\"l\\" aria-hidden=\\"true\\">
                      <EuiIconRefresh className=\\"euiIcon euiIcon--large euiButtonIcon__icon\\" style={null} tabIndex={[undefined]} focusable=\\"false\\" role=\\"img\\" title={[undefined]} aria-hidden={true}>
                        <svg width={16} height={16} viewBox=\\"0 0 16 16\\" xmlns=\\"http://www.w3.org/2000/svg\\" aria-labelledby={[undefined]} className=\\"euiIcon euiIcon--large euiButtonIcon__icon\\" style={null} tabIndex={[undefined]} focusable=\\"false\\" role=\\"img\\" aria-hidden={true}>
                          <path d=\\"M11.228 2.942a.5.5 0 11-.538.842A5 5 0 1013 8a.5.5 0 111 0 6 6 0 11-2.772-5.058zM14 1.5v3A1.5 1.5 0 0112.5 6h-3a.5.5 0 010-1h3a.5.5 0 00.5-.5v-3a.5.5 0 111 0z\\" />
                        </svg>
                      </EuiIconRefresh>
                    </EuiIcon>
                  </button>
                </EuiButtonIcon>
                <StateManager id=\\"uniforms-0000-001m\\" inputId=\\"uniforms-0000-001m.search\\" name=\\"x.1\\" onChange={[Function: onChange]} options={[ { label: 'dec2', value: 'b' } ]} value={[undefined]} isSearchable={true} isClearable={false} placeholder=\\"Search and select a subscription...\\" isDisabled={false} required={false} inputRef={[undefined]} className=\\"subscription-field-select\\" defaultInputValue=\\"\\" defaultMenuIsOpen={false} defaultValue={null}>
                  <Select id=\\"uniforms-0000-001m\\" inputId=\\"uniforms-0000-001m.search\\" name=\\"x.1\\" onChange={[Function]} options={[ { label: 'dec2', value: 'b' } ]} value={null} isSearchable={true} isClearable={false} placeholder=\\"Search and select a subscription...\\" isDisabled={false} required={false} inputRef={[undefined]} className=\\"subscription-field-select\\" inputValue=\\"\\" menuIsOpen={false} onInputChange={[Function]} onMenuClose={[Function]} onMenuOpen={[Function]} backspaceRemovesValue={true} blurInputOnSelect={true} captureMenuScroll={false} closeMenuOnSelect={true} closeMenuOnScroll={false} components={{}} controlShouldRenderValue={true} escapeClearsValue={false} filterOption={[Function]} formatGroupLabel={[Function: formatGroupLabel]} getOptionLabel={[Function: getOptionLabel]} getOptionValue={[Function: getOptionValue]} isLoading={false} isMulti={false} isRtl={false} isOptionDisabled={[Function: isOptionDisabled]} loadingMessage={[Function: loadingMessage]} maxMenuHeight={300} minMenuHeight={140} menuPlacement=\\"bottom\\" menuPosition=\\"absolute\\" menuShouldBlockScroll={false} menuShouldScrollIntoView={true} noOptionsMessage={[Function: noOptionsMessage]} openMenuOnFocus={false} openMenuOnClick={true} pageSize={5} screenReaderStatus={[Function: screenReaderStatus]} styles={{}} tabIndex=\\"0\\" tabSelectsValue={true}>
                    <SelectContainer cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={false} isMulti={false} isRtl={false} options={[ { label: 'dec2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-001m', inputId: 'uniforms-0000-001m.search', name: 'x.1', onChange: [Function], options: [ { label: 'dec2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} className=\\"subscription-field-select\\" innerProps={{ id: 'uniforms-0000-001m', onKeyDown: [Function] }} isDisabled={false} isFocused={false}>
                      <EmotionCssPropInternal css={{ label: 'container', direction: null, pointerEvents: null, position: 'relative', boxSizing: 'border-box' }} className=\\"subscription-field-select\\" id=\\"uniforms-0000-001m\\" onKeyDown={[Function]} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"SelectContainer\\">
                        <div className=\\"subscription-field-select css-2b097c-container\\" id=\\"uniforms-0000-001m\\" onKeyDown={[Function]}>
                          <Control cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={false} isMulti={false} isRtl={false} options={[ { label: 'dec2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-001m', inputId: 'uniforms-0000-001m.search', name: 'x.1', onChange: [Function], options: [ { label: 'dec2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} innerRef={[Function]} innerProps={{ onMouseDown: [Function], onTouchEnd: [Function] }} isDisabled={false} isFocused={false} menuIsOpen={false}>
                            <EmotionCssPropInternal css={{ label: 'control', alignItems: 'center', backgroundColor: 'hsl(0, 0%, 100%)', borderColor: 'hsl(0, 0%, 80%)', borderRadius: 4, borderStyle: 'solid', borderWidth: 1, boxShadow: null, cursor: 'default', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between', minHeight: 38, outline: '0 !important', position: 'relative', transition: 'all 100ms', '&:hover': { borderColor: 'hsl(0, 0%, 70%)' }, boxSizing: 'border-box' }} className=\\"\\" onMouseDown={[Function]} onTouchEnd={[Function]} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Control\\">
                              <div className=\\" css-yk16xz-control\\" onMouseDown={[Function]} onTouchEnd={[Function]}>
                                <ValueContainer cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={false} isMulti={false} isRtl={false} options={[ { label: 'dec2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-001m', inputId: 'uniforms-0000-001m.search', name: 'x.1', onChange: [Function], options: [ { label: 'dec2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} isDisabled={false}>
                                  <EmotionCssPropInternal css={{ alignItems: 'center', display: 'flex', flex: 1, flexWrap: 'wrap', padding: '2px 8px', WebkitOverflowScrolling: 'touch', position: 'relative', overflow: 'hidden', boxSizing: 'border-box' }} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"ValueContainer\\">
                                    <div className=\\" css-g1d714-ValueContainer\\">
                                      <Placeholder cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={false} isMulti={false} isRtl={false} options={[ { label: 'dec2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-001m', inputId: 'uniforms-0000-001m.search', name: 'x.1', onChange: [Function], options: [ { label: 'dec2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} isDisabled={false} isFocused={false}>
                                        <EmotionCssPropInternal css={{ label: 'placeholder', color: 'hsl(0, 0%, 50%)', marginLeft: 2, marginRight: 2, position: 'absolute', top: '50%', transform: 'translateY(-50%)', boxSizing: 'border-box' }} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Placeholder\\">
                                          <div className=\\" css-1wa3eu0-placeholder\\">
                                            Search and select a subscription...
                                          </div>
                                        </EmotionCssPropInternal>
                                      </Placeholder>
                                      <Input autoCapitalize=\\"none\\" autoComplete=\\"off\\" autoCorrect=\\"off\\" cx={[Function: bound classNames]} getStyles={[Function]} id=\\"uniforms-0000-001m.search\\" innerRef={[Function]} isDisabled={false} isHidden={false} onBlur={[Function]} onChange={[Function]} onFocus={[Function]} selectProps={{ id: 'uniforms-0000-001m', inputId: 'uniforms-0000-001m.search', name: 'x.1', onChange: [Function], options: [ { label: 'dec2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} spellCheck=\\"false\\" tabIndex=\\"0\\" theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} type=\\"text\\" value=\\"\\" aria-autocomplete=\\"list\\" aria-label={[undefined]} aria-labelledby={[undefined]}>
                                        <EmotionCssPropInternal css={{ margin: 2, paddingBottom: 2, paddingTop: 2, visibility: 'visible', color: 'hsl(0, 0%, 20%)', boxSizing: 'border-box' }} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Input\\">
                                          <div className=\\"css-b8ldur-Input\\">
                                            <AutosizeInput className=\\"\\" inputRef={[Function]} inputStyle={{ label: 'input', background: 0, border: 0, fontSize: 'inherit', opacity: 1, outline: 0, padding: 0, color: 'inherit' }} disabled={false} autoCapitalize=\\"none\\" autoComplete=\\"off\\" autoCorrect=\\"off\\" id=\\"uniforms-0000-001m.search\\" onBlur={[Function]} onChange={[Function]} onFocus={[Function]} spellCheck=\\"false\\" tabIndex=\\"0\\" type=\\"text\\" value=\\"\\" aria-autocomplete=\\"list\\" aria-label={[undefined]} aria-labelledby={[undefined]} minWidth={1} injectStyles={true}>
                                              <div className=\\"\\" style={{ display: 'inline-block' }}>
                                                <input className={[undefined]} disabled={false} autoCapitalize=\\"none\\" autoComplete=\\"off\\" autoCorrect=\\"off\\" id=\\"uniforms-0000-001m.search\\" onBlur={[Function]} onChange={[Function]} onFocus={[Function]} spellCheck=\\"false\\" tabIndex=\\"0\\" type=\\"text\\" value=\\"\\" aria-autocomplete=\\"list\\" aria-label={[undefined]} aria-labelledby={[undefined]} style={{ boxSizing: 'content-box', width: '2px', label: 'input', background: 0, border: 0, fontSize: 'inherit', opacity: 1, outline: 0, padding: 0, color: 'inherit' }} />
                                                <div style={{ position: 'absolute', top: 0, left: 0, visibility: 'hidden', height: 0, overflow: 'scroll', whiteSpace: 'pre' }} />
                                              </div>
                                            </AutosizeInput>
                                          </div>
                                        </EmotionCssPropInternal>
                                      </Input>
                                    </div>
                                  </EmotionCssPropInternal>
                                </ValueContainer>
                                <IndicatorsContainer cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={false} isMulti={false} isRtl={false} options={[ { label: 'dec2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-001m', inputId: 'uniforms-0000-001m.search', name: 'x.1', onChange: [Function], options: [ { label: 'dec2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} isDisabled={false}>
                                  <EmotionCssPropInternal css={{ alignItems: 'center', alignSelf: 'stretch', display: 'flex', flexShrink: 0, boxSizing: 'border-box' }} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"IndicatorsContainer\\">
                                    <div className=\\" css-1hb7zxy-IndicatorsContainer\\">
                                      <IndicatorSeparator cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={false} isMulti={false} isRtl={false} options={[ { label: 'dec2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-001m', inputId: 'uniforms-0000-001m.search', name: 'x.1', onChange: [Function], options: [ { label: 'dec2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} isDisabled={false} isFocused={false}>
                                        <EmotionCssPropInternal css={{ label: 'indicatorSeparator', alignSelf: 'stretch', backgroundColor: 'hsl(0, 0%, 80%)', marginBottom: 8, marginTop: 8, width: 1, boxSizing: 'border-box' }} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"span\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"IndicatorSeparator\\">
                                          <span className=\\" css-1okebmr-indicatorSeparator\\" />
                                        </EmotionCssPropInternal>
                                      </IndicatorSeparator>
                                      <DropdownIndicator cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={false} isMulti={false} isRtl={false} options={[ { label: 'dec2', value: 'b' } ]} selectOption={[Function]} setValue={[Function]} selectProps={{ id: 'uniforms-0000-001m', inputId: 'uniforms-0000-001m.search', name: 'x.1', onChange: [Function], options: [ { label: 'dec2', value: 'b' } ], value: null, isSearchable: true, isClearable: false, placeholder: 'Search and select a subscription...', isDisabled: false, required: false, inputRef: undefined, className: 'subscription-field-select', inputValue: '', menuIsOpen: false, onInputChange: [Function], onMenuClose: [Function], onMenuOpen: [Function], backspaceRemovesValue: true, blurInputOnSelect: true, captureMenuScroll: false, closeMenuOnSelect: true, closeMenuOnScroll: false, components: {}, controlShouldRenderValue: true, escapeClearsValue: false, filterOption: [Function], formatGroupLabel: [Function: formatGroupLabel], getOptionLabel: [Function: getOptionLabel], getOptionValue: [Function: getOptionValue], isLoading: false, isMulti: false, isRtl: false, isOptionDisabled: [Function: isOptionDisabled], loadingMessage: [Function: loadingMessage], maxMenuHeight: 300, minMenuHeight: 140, menuPlacement: 'bottom', menuPosition: 'absolute', menuShouldBlockScroll: false, menuShouldScrollIntoView: true, noOptionsMessage: [Function: noOptionsMessage], openMenuOnFocus: false, openMenuOnClick: true, pageSize: 5, screenReaderStatus: [Function: screenReaderStatus], styles: {}, tabIndex: '0', tabSelectsValue: true }} theme={{ borderRadius: 4, colors: { primary: '#2684FF', primary75: '#4C9AFF', primary50: '#B2D4FF', primary25: '#DEEBFF', danger: '#DE350B', dangerLight: '#FFBDAD', neutral0: 'hsl(0, 0%, 100%)', neutral5: 'hsl(0, 0%, 95%)', neutral10: 'hsl(0, 0%, 90%)', neutral20: 'hsl(0, 0%, 80%)', neutral30: 'hsl(0, 0%, 70%)', neutral40: 'hsl(0, 0%, 60%)', neutral50: 'hsl(0, 0%, 50%)', neutral60: 'hsl(0, 0%, 40%)', neutral70: 'hsl(0, 0%, 30%)', neutral80: 'hsl(0, 0%, 20%)', neutral90: 'hsl(0, 0%, 10%)' }, spacing: { baseUnit: 4, controlHeight: 38, menuGutter: 8 } }} innerProps={{ onMouseDown: [Function], onTouchEnd: [Function], 'aria-hidden': 'true' }} isDisabled={false} isFocused={false}>
                                        <EmotionCssPropInternal onMouseDown={[Function]} onTouchEnd={[Function]} aria-hidden=\\"true\\" css={{ label: 'indicatorContainer', color: 'hsl(0, 0%, 80%)', display: 'flex', padding: 8, transition: 'color 150ms', ':hover': { color: 'hsl(0, 0%, 60%)' }, boxSizing: 'border-box' }} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"DropdownIndicator\\">
                                          <div onMouseDown={[Function]} onTouchEnd={[Function]} aria-hidden=\\"true\\" className=\\" css-tlfecz-indicatorContainer\\">
                                            <DownChevron>
                                              <Svg size={20}>
                                                <EmotionCssPropInternal height={20} width={20} viewBox=\\"0 0 20 20\\" aria-hidden=\\"true\\" focusable=\\"false\\" css={{ name: '19bqh2r', styles: 'display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;', map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGljYXRvcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0JJIiwiZmlsZSI6ImluZGljYXRvcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyB0eXBlIE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3gsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgdHlwZSB7IENvbW1vblByb3BzLCBUaGVtZSB9IGZyb20gJy4uL3R5cGVzJztcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBEcm9wZG93biAmIENsZWFyIEljb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuY29uc3QgU3ZnID0gKHsgc2l6ZSwgLi4ucHJvcHMgfTogeyBzaXplOiBudW1iZXIgfSkgPT4gKFxuICA8c3ZnXG4gICAgaGVpZ2h0PXtzaXplfVxuICAgIHdpZHRoPXtzaXplfVxuICAgIHZpZXdCb3g9XCIwIDAgMjAgMjBcIlxuICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgZm9jdXNhYmxlPVwiZmFsc2VcIlxuICAgIGNzcz17e1xuICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgICBmaWxsOiAnY3VycmVudENvbG9yJyxcbiAgICAgIGxpbmVIZWlnaHQ6IDEsXG4gICAgICBzdHJva2U6ICdjdXJyZW50Q29sb3InLFxuICAgICAgc3Ryb2tlV2lkdGg6IDAsXG4gICAgfX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pO1xuXG5leHBvcnQgY29uc3QgQ3Jvc3NJY29uID0gKHByb3BzOiBhbnkpID0+IChcbiAgPFN2ZyBzaXplPXsyMH0gey4uLnByb3BzfT5cbiAgICA8cGF0aCBkPVwiTTE0LjM0OCAxNC44NDljLTAuNDY5IDAuNDY5LTEuMjI5IDAuNDY5LTEuNjk3IDBsLTIuNjUxLTMuMDMwLTIuNjUxIDMuMDI5Yy0wLjQ2OSAwLjQ2OS0xLjIyOSAwLjQ2OS0xLjY5NyAwLTAuNDY5LTAuNDY5LTAuNDY5LTEuMjI5IDAtMS42OTdsMi43NTgtMy4xNS0yLjc1OS0zLjE1MmMtMC40NjktMC40NjktMC40NjktMS4yMjggMC0xLjY5N3MxLjIyOC0wLjQ2OSAxLjY5NyAwbDIuNjUyIDMuMDMxIDIuNjUxLTMuMDMxYzAuNDY5LTAuNDY5IDEuMjI4LTAuNDY5IDEuNjk3IDBzMC40NjkgMS4yMjkgMCAxLjY5N2wtMi43NTggMy4xNTIgMi43NTggMy4xNWMwLjQ2OSAwLjQ2OSAwLjQ2OSAxLjIyOSAwIDEuNjk4elwiIC8+XG4gIDwvU3ZnPlxuKTtcbmV4cG9ydCBjb25zdCBEb3duQ2hldnJvbiA9IChwcm9wczogYW55KSA9PiAoXG4gIDxTdmcgc2l6ZT17MjB9IHsuLi5wcm9wc30+XG4gICAgPHBhdGggZD1cIk00LjUxNiA3LjU0OGMwLjQzNi0wLjQ0NiAxLjA0My0wLjQ4MSAxLjU3NiAwbDMuOTA4IDMuNzQ3IDMuOTA4LTMuNzQ3YzAuNTMzLTAuNDgxIDEuMTQxLTAuNDQ2IDEuNTc0IDAgMC40MzYgMC40NDUgMC40MDggMS4xOTcgMCAxLjYxNS0wLjQwNiAwLjQxOC00LjY5NSA0LjUwMi00LjY5NSA0LjUwMi0wLjIxNyAwLjIyMy0wLjUwMiAwLjMzNS0wLjc4NyAwLjMzNXMtMC41Ny0wLjExMi0wLjc4OS0wLjMzNWMwIDAtNC4yODctNC4wODQtNC42OTUtNC41MDJzLTAuNDM2LTEuMTcgMC0xLjYxNXpcIiAvPlxuICA8L1N2Zz5cbik7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRHJvcGRvd24gJiBDbGVhciBCdXR0b25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZXhwb3J0IHR5cGUgSW5kaWNhdG9yUHJvcHMgPSBDb21tb25Qcm9wcyAmIHtcbiAgLyoqIFRoZSBjaGlsZHJlbiB0byBiZSByZW5kZXJlZCBpbnNpZGUgdGhlIGluZGljYXRvci4gKi9cbiAgY2hpbGRyZW46IE5vZGUsXG4gIC8qKiBQcm9wcyB0aGF0IHdpbGwgYmUgcGFzc2VkIG9uIHRvIHRoZSBjaGlsZHJlbi4gKi9cbiAgaW5uZXJQcm9wczogYW55LFxuICAvKiogVGhlIGZvY3VzZWQgc3RhdGUgb2YgdGhlIHNlbGVjdC4gKi9cbiAgaXNGb2N1c2VkOiBib29sZWFuLFxuICAvKiogV2hldGhlciB0aGUgdGV4dCBpcyByaWdodCB0byBsZWZ0ICovXG4gIGlzUnRsOiBib29sZWFuLFxufTtcblxuY29uc3QgYmFzZUNTUyA9ICh7XG4gIGlzRm9jdXNlZCxcbiAgdGhlbWU6IHtcbiAgICBzcGFjaW5nOiB7IGJhc2VVbml0IH0sXG4gICAgY29sb3JzLFxuICB9LFxufTogSW5kaWNhdG9yUHJvcHMpID0+ICh7XG4gIGxhYmVsOiAnaW5kaWNhdG9yQ29udGFpbmVyJyxcbiAgY29sb3I6IGlzRm9jdXNlZCA/IGNvbG9ycy5uZXV0cmFsNjAgOiBjb2xvcnMubmV1dHJhbDIwLFxuICBkaXNwbGF5OiAnZmxleCcsXG4gIHBhZGRpbmc6IGJhc2VVbml0ICogMixcbiAgdHJhbnNpdGlvbjogJ2NvbG9yIDE1MG1zJyxcblxuICAnOmhvdmVyJzoge1xuICAgIGNvbG9yOiBpc0ZvY3VzZWQgPyBjb2xvcnMubmV1dHJhbDgwIDogY29sb3JzLm5ldXRyYWw0MCxcbiAgfSxcbn0pO1xuXG5leHBvcnQgY29uc3QgZHJvcGRvd25JbmRpY2F0b3JDU1MgPSBiYXNlQ1NTO1xuZXhwb3J0IGNvbnN0IERyb3Bkb3duSW5kaWNhdG9yID0gKHByb3BzOiBJbmRpY2F0b3JQcm9wcykgPT4ge1xuICBjb25zdCB7IGNoaWxkcmVuLCBjbGFzc05hbWUsIGN4LCBnZXRTdHlsZXMsIGlubmVyUHJvcHMgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIHsuLi5pbm5lclByb3BzfVxuICAgICAgY3NzPXtnZXRTdHlsZXMoJ2Ryb3Bkb3duSW5kaWNhdG9yJywgcHJvcHMpfVxuICAgICAgY2xhc3NOYW1lPXtjeChcbiAgICAgICAge1xuICAgICAgICAgIGluZGljYXRvcjogdHJ1ZSxcbiAgICAgICAgICAnZHJvcGRvd24taW5kaWNhdG9yJzogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgY2xhc3NOYW1lXG4gICAgICApfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbiB8fCA8RG93bkNoZXZyb24gLz59XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgY2xlYXJJbmRpY2F0b3JDU1MgPSBiYXNlQ1NTO1xuZXhwb3J0IGNvbnN0IENsZWFySW5kaWNhdG9yID0gKHByb3BzOiBJbmRpY2F0b3JQcm9wcykgPT4ge1xuICBjb25zdCB7IGNoaWxkcmVuLCBjbGFzc05hbWUsIGN4LCBnZXRTdHlsZXMsIGlubmVyUHJvcHMgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIHsuLi5pbm5lclByb3BzfVxuICAgICAgY3NzPXtnZXRTdHlsZXMoJ2NsZWFySW5kaWNhdG9yJywgcHJvcHMpfVxuICAgICAgY2xhc3NOYW1lPXtjeChcbiAgICAgICAge1xuICAgICAgICAgIGluZGljYXRvcjogdHJ1ZSxcbiAgICAgICAgICAnY2xlYXItaW5kaWNhdG9yJzogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgY2xhc3NOYW1lXG4gICAgICApfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbiB8fCA8Q3Jvc3NJY29uIC8+fVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBTZXBhcmF0b3Jcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG50eXBlIFNlcGFyYXRvclN0YXRlID0geyBpc0Rpc2FibGVkOiBib29sZWFuIH07XG5cbmV4cG9ydCBjb25zdCBpbmRpY2F0b3JTZXBhcmF0b3JDU1MgPSAoe1xuICBpc0Rpc2FibGVkLFxuICB0aGVtZToge1xuICAgIHNwYWNpbmc6IHsgYmFzZVVuaXQgfSxcbiAgICBjb2xvcnMsXG4gIH0sXG59OiBDb21tb25Qcm9wcyAmIFNlcGFyYXRvclN0YXRlKSA9PiAoe1xuICBsYWJlbDogJ2luZGljYXRvclNlcGFyYXRvcicsXG4gIGFsaWduU2VsZjogJ3N0cmV0Y2gnLFxuICBiYWNrZ3JvdW5kQ29sb3I6IGlzRGlzYWJsZWQgPyBjb2xvcnMubmV1dHJhbDEwIDogY29sb3JzLm5ldXRyYWwyMCxcbiAgbWFyZ2luQm90dG9tOiBiYXNlVW5pdCAqIDIsXG4gIG1hcmdpblRvcDogYmFzZVVuaXQgKiAyLFxuICB3aWR0aDogMSxcbn0pO1xuXG5leHBvcnQgY29uc3QgSW5kaWNhdG9yU2VwYXJhdG9yID0gKHByb3BzOiBJbmRpY2F0b3JQcm9wcykgPT4ge1xuICBjb25zdCB7IGNsYXNzTmFtZSwgY3gsIGdldFN0eWxlcywgaW5uZXJQcm9wcyB9ID0gcHJvcHM7XG4gIHJldHVybiAoXG4gICAgPHNwYW5cbiAgICAgIHsuLi5pbm5lclByb3BzfVxuICAgICAgY3NzPXtnZXRTdHlsZXMoJ2luZGljYXRvclNlcGFyYXRvcicsIHByb3BzKX1cbiAgICAgIGNsYXNzTmFtZT17Y3goeyAnaW5kaWNhdG9yLXNlcGFyYXRvcic6IHRydWUgfSwgY2xhc3NOYW1lKX1cbiAgICAvPlxuICApO1xufTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBMb2FkaW5nXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuY29uc3QgbG9hZGluZ0RvdEFuaW1hdGlvbnMgPSBrZXlmcmFtZXNgXG4gIDAlLCA4MCUsIDEwMCUgeyBvcGFjaXR5OiAwOyB9XG4gIDQwJSB7IG9wYWNpdHk6IDE7IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBsb2FkaW5nSW5kaWNhdG9yQ1NTID0gKHtcbiAgaXNGb2N1c2VkLFxuICBzaXplLFxuICB0aGVtZToge1xuICAgIGNvbG9ycyxcbiAgICBzcGFjaW5nOiB7IGJhc2VVbml0IH0sXG4gIH0sXG59OiB7XG4gIGlzRm9jdXNlZDogYm9vbGVhbixcbiAgc2l6ZTogbnVtYmVyLFxuICB0aGVtZTogVGhlbWUsXG59KSA9PiAoe1xuICBsYWJlbDogJ2xvYWRpbmdJbmRpY2F0b3InLFxuICBjb2xvcjogaXNGb2N1c2VkID8gY29sb3JzLm5ldXRyYWw2MCA6IGNvbG9ycy5uZXV0cmFsMjAsXG4gIGRpc3BsYXk6ICdmbGV4JyxcbiAgcGFkZGluZzogYmFzZVVuaXQgKiAyLFxuICB0cmFuc2l0aW9uOiAnY29sb3IgMTUwbXMnLFxuICBhbGlnblNlbGY6ICdjZW50ZXInLFxuICBmb250U2l6ZTogc2l6ZSxcbiAgbGluZUhlaWdodDogMSxcbiAgbWFyZ2luUmlnaHQ6IHNpemUsXG4gIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLFxufSk7XG5cbnR5cGUgRG90UHJvcHMgPSB7IGRlbGF5OiBudW1iZXIsIG9mZnNldDogYm9vbGVhbiB9O1xuY29uc3QgTG9hZGluZ0RvdCA9ICh7IGRlbGF5LCBvZmZzZXQgfTogRG90UHJvcHMpID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGFuaW1hdGlvbjogYCR7bG9hZGluZ0RvdEFuaW1hdGlvbnN9IDFzIGVhc2UtaW4tb3V0ICR7ZGVsYXl9bXMgaW5maW5pdGU7YCxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ2N1cnJlbnRDb2xvcicsXG4gICAgICBib3JkZXJSYWRpdXM6ICcxZW0nLFxuICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgICBtYXJnaW5MZWZ0OiBvZmZzZXQgPyAnMWVtJyA6IG51bGwsXG4gICAgICBoZWlnaHQ6ICcxZW0nLFxuICAgICAgdmVydGljYWxBbGlnbjogJ3RvcCcsXG4gICAgICB3aWR0aDogJzFlbScsXG4gICAgfX1cbiAgLz5cbik7XG5cbmV4cG9ydCB0eXBlIExvYWRpbmdJY29uUHJvcHMgPSB7XG4gIC8qKiBQcm9wcyB0aGF0IHdpbGwgYmUgcGFzc2VkIG9uIHRvIHRoZSBjaGlsZHJlbi4gKi9cbiAgaW5uZXJQcm9wczogYW55LFxuICAvKiogVGhlIGZvY3VzZWQgc3RhdGUgb2YgdGhlIHNlbGVjdC4gKi9cbiAgaXNGb2N1c2VkOiBib29sZWFuLFxuICAvKiogV2hldGhlciB0aGUgdGV4dCBpcyByaWdodCB0byBsZWZ0ICovXG4gIGlzUnRsOiBib29sZWFuLFxufSAmIENvbW1vblByb3BzICYge1xuICAgIC8qKiBTZXQgc2l6ZSBvZiB0aGUgY29udGFpbmVyLiAqL1xuICAgIHNpemU6IG51bWJlcixcbiAgfTtcbmV4cG9ydCBjb25zdCBMb2FkaW5nSW5kaWNhdG9yID0gKHByb3BzOiBMb2FkaW5nSWNvblByb3BzKSA9PiB7XG4gIGNvbnN0IHsgY2xhc3NOYW1lLCBjeCwgZ2V0U3R5bGVzLCBpbm5lclByb3BzLCBpc1J0bCB9ID0gcHJvcHM7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICB7Li4uaW5uZXJQcm9wc31cbiAgICAgIGNzcz17Z2V0U3R5bGVzKCdsb2FkaW5nSW5kaWNhdG9yJywgcHJvcHMpfVxuICAgICAgY2xhc3NOYW1lPXtjeChcbiAgICAgICAge1xuICAgICAgICAgIGluZGljYXRvcjogdHJ1ZSxcbiAgICAgICAgICAnbG9hZGluZy1pbmRpY2F0b3InOiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICBjbGFzc05hbWVcbiAgICAgICl9XG4gICAgPlxuICAgICAgPExvYWRpbmdEb3QgZGVsYXk9ezB9IG9mZnNldD17aXNSdGx9IC8+XG4gICAgICA8TG9hZGluZ0RvdCBkZWxheT17MTYwfSBvZmZzZXQgLz5cbiAgICAgIDxMb2FkaW5nRG90IGRlbGF5PXszMjB9IG9mZnNldD17IWlzUnRsfSAvPlxuICAgIDwvZGl2PlxuICApO1xufTtcbkxvYWRpbmdJbmRpY2F0b3IuZGVmYXVsdFByb3BzID0geyBzaXplOiA0IH07XG4iXX0= */' }} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"svg\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Svg\\">
                                                  <svg height={20} width={20} viewBox=\\"0 0 20 20\\" aria-hidden=\\"true\\" focusable=\\"false\\" className=\\"css-6q0nyr-Svg\\">
                                                    <path d=\\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\\" />
                                                  </svg>
                                                </EmotionCssPropInternal>
                                              </Svg>
                                            </DownChevron>
                                          </div>
                                        </EmotionCssPropInternal>
                                      </DropdownIndicator>
                                    </div>
                                  </EmotionCssPropInternal>
                                </IndicatorsContainer>
                              </div>
                            </EmotionCssPropInternal>
                          </Control>
                          <input name=\\"x.1\\" type=\\"hidden\\" value=\\"\\" />
                        </div>
                      </EmotionCssPropInternal>
                    </SelectContainer>
                  </Select>
                </StateManager>
              </div>
            </section>
          </Subscription>
        </SubscriptionField>
        <ListAddField initialCount={1} name=\\"$\\" disabled={false} outerList={false}>
          <ListAdd initialCount={1} name=\\"x.$\\" disabled={false} outerList={false} id=\\"uniforms-0000-001o\\" label=\\"\\" placeholder=\\"\\" showInlineError={false} changed={false} error={null} errorMessage=\\"\\" field={{ type: [Function: String], optional: true, label: 'X' }} fieldType={[Function: String]} fields={[]} onChange={[Function]} value={[undefined]} required={false}>
            <div className=\\"add-item\\" id=\\"uniforms-0000-001o\\" required={false} onClick={[Function: onClick]}>
              <i className=\\"fa fa-plus \\" />
              <label />
            </div>
          </ListAdd>
        </ListAddField>
      </ul>
    </section>
  </List>
</ListField>"
`;
